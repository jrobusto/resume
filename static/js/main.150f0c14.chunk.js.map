{"version":3,"sources":["utils/theme.ts","sections/PageHeader/components/ResumeTitle.tsx","components/Icon.tsx","sections/PageHeader/components/ContactLink.tsx","sections/PageHeader/components/ContactDetails.tsx","sections/PageHeader/PageHeader.tsx","components/SectionName.tsx","components/DateRange.tsx","components/SidebarHeader.tsx","components/ItemTitle.tsx","sections/PageBody/Experience/components/JobItem.tsx","components/Mono.tsx","components/HeaderIcon.tsx","sections/PageBody/Experience/Experience.tsx","sections/PageBody/Education/Education.tsx","sections/Skills/TechnicalSkills.tsx","sections/Skills/OtherSkills.tsx","sections/PageBody/PageBody.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultTheme","headerFont","bodyFont","monoFont","primaryColor","secondaryColor","mutedColor","white","styled","baseStyled","NameHeader","h1","_templateObject","props","theme","Pronouns","span","_templateObject2","TitleHeader","h2","_templateObject3","ResumeTitle","react","fullName","jobTitle","IconSpan","Icon_templateObject","Icon","iconType","type","includes","concat","className","ContactType","Link","a","ContactLink_templateObject","ContactLink","href","value","displayAs","EMAIL","PHONE","phoneNumber","parsePhoneNumberFromString","getURI","formatNational","replace","DetailsList","ul","ContactDetails_templateObject","ListItem","li","ContactDetails_templateObject2","ContactDetails","email","phone","HeaderGrid","div","withConfig","displayName","componentId","PageHeader","github","SectionName","SectionName_templateObject","DateRange","DateRange_templateObject","SidebarHeader","h3","SidebarHeader_templateObject","ItemTitle","h4","ItemTitle_templateObject","JobGrid","JobItem_templateObject","Accomplishments","JobItem_templateObject2","JobItem","start","moment","job","startDate","format","bullets","map","b","i","key","end","endDate","companyName","Mono","code","Mono_templateObject","HeaderIcon_templateObject","HeaderIcon","HeaderIcon_IconSpan","Stack","Experience_templateObject","jobs","year","month","toDate","Experience","jobList","j","SchoolGrid","Education_templateObject","EducationContext","p","Education_templateObject2","Major","Education_templateObject3","EducationDescription","_templateObject4","Education","id","SkillsList","TechnicalSkills_templateObject","SkillsItem","TechnicalSkills_templateObject2","Level","TechnicalSkills_templateObject3","TechnicalSkills","OtherSkills_templateObject","OtherSkills_templateObject2","Area","OtherSkills_templateObject3","OtherSkills","OtherSkills_SkillsList","OtherSkills_SkillsItem","BodyDiv","PageBody_templateObject","TwoColumns","PageBody_templateObject2","PageBody","Resume","App_templateObject","Boolean","window","location","hostname","match","ReactDOM","render","react_default","createElement","styled_components_browser_esm","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.150f0c14.chunk.js","sourcesContent":["import baseStyled, { ThemedStyledInterface } from \"styled-components/macro\";\n\nimport { FontFamilyProperty, Color } from \"csstype\";\n\nexport interface Theme {\n    headerFont: FontFamilyProperty;\n    bodyFont: FontFamilyProperty;\n    monoFont: FontFamilyProperty;\n    primaryColor: Color;\n    secondaryColor: Color;\n    mutedColor: Color;\n    white: Color;\n}\n\nexport const defaultTheme: Theme = {\n    headerFont: \"'Work Sans', sans- serif\",\n    bodyFont: \"'Taviraj', serif\",\n    monoFont: \"'Space Mono', monospace\",\n    primaryColor: \"#8789C0\",\n    secondaryColor: \"#545E75\",\n    mutedColor: \"#D8DDF0\",\n    white: \"#FFFFFF\",\n};\n\nexport const styled = baseStyled as ThemedStyledInterface<Theme>;\n","import * as React from \"react\";\n\nimport { styled } from \"../../../utils/theme\";\n\ninterface NameProps {\n    fullName: string;\n    jobTitle: string;\n}\n\nexport const NameHeader = styled.h1`\n    font-family: ${props => props.theme.headerFont};\n    margin-top: 0;\n    margin-bottom: 0;\n`;\n\nexport const Pronouns = styled.span`\n    /* font-family: ${props => props.theme.bodyFont}; */\n    font-size: 16px;\n`\nexport const TitleHeader = styled.h2`\n    font-family: ${props => props.theme.headerFont};\n    margin-top: 0;\n    margin-bottom: 0;\n`;\n\nexport function ResumeTitle(props: NameProps): JSX.Element {\n    return (\n        <div>\n            <NameHeader>{props.fullName} <Pronouns>(they/them)</Pronouns></NameHeader>\n            <TitleHeader>{props.jobTitle}</TitleHeader>\n        </div>\n    );\n}\n","import * as React from \"react\";\nimport { styled } from \"../utils/theme\";\n\ntype IconType = \"mail\" | \"call\" | \"logo-github\" | \"construct\" | \"briefcase\" | \"school\" | \"star\";\n\ninterface IconProps {\n    type: IconType;\n}\n\nconst IconSpan = styled.span`\n    /* vertical-align: middle; */\n    padding-right: .25em;\n`\n\nexport function Icon(props: IconProps): JSX.Element {\n    let iconType: string = props.type;\n    if (!iconType.includes(\"logo\")){\n        iconType = `md-${iconType}`;\n    }\n    return (\n        <IconSpan className={`icon ion-${iconType}`} />\n    );\n}\n","import * as React from \"react\";\nimport { styled } from \"../../../utils/theme\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nexport enum ContactType {\n    PHONE = \"PHONE\",\n    EMAIL = \"EMAIL\",\n    OTHER = \"OTHER\"\n}\n\ninterface ContactLinkProps {\n    type: ContactType;\n    value: string;\n}\n\nconst Link = styled.a`\n    text-decoration: none;\n    color: ${props => props.theme.mutedColor};\n    :hover {\n        color: ${props => props.theme.secondaryColor}\n    }\n`;\n\nexport function ContactLink(props: ContactLinkProps): JSX.Element {\n    let href = props.value;\n    let displayAs = props.value;\n    if (props.type === ContactType.EMAIL) {\n        href = `mailto:${props.value}`;\n    } else if (props.type === ContactType.PHONE) {\n        var phoneNumber = parsePhoneNumberFromString(props.value);\n        if (phoneNumber) {\n            href = phoneNumber.getURI();\n            displayAs = phoneNumber.formatNational();\n        }\n    } else {\n        href = props.value;\n        displayAs = displayAs.replace(/https:\\/\\/|www\\./, \"\");\n    }\n    return (\n        <Link href={href}>{displayAs}</Link>\n    );\n}\n","import * as React from \"react\";\n\nimport { Icon } from \"../../../components/Icon\";\nimport { ContactLink, ContactType } from \"./ContactLink\";\nimport { styled } from \"../../../utils/theme\";\n\ninterface ContactDetailsProps {\n    email: string;\n    phone: string;\n    github: string;\n}\n\nconst DetailsList = styled.ul`\n    font-family: ${props => props.theme.monoFont};\n    list-style: none;\n    padding-left: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n    text-align: right;\n    padding-right: 1em;\n`;\n\nconst ListItem = styled.li`\n    margin-top: 0.5em;\n`\nexport function ContactDetails(props: ContactDetailsProps): JSX.Element {\n    return (\n        <DetailsList>\n            <ListItem>\n                <Icon type=\"mail\" />\n                    <ContactLink\n                    type={ContactType.EMAIL}\n                    value={props.email}\n                />\n            </ListItem>\n            <ListItem>\n                <Icon type=\"call\" />\n                    <ContactLink\n                    type={ContactType.PHONE}\n                    value={props.phone}\n                />\n            </ListItem>\n            {/* <li>\n                <Icon type=\"logo-github\" />&nbsp;\n                    <ContactLink\n                    type={ContactType.OTHER}\n                    value={props.github}\n                />\n            </li> */}\n        </DetailsList>\n    );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components/macro\";\n\nimport { ResumeTitle } from \"./components/ResumeTitle\";\nimport { ContactDetails } from \"./components/ContactDetails\";\n\ninterface PageHeaderProps {\n}\n\nconst HeaderGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    background-color: ${props => props.theme.primaryColor};\n    border-bottom: 2px dotted ${props => props.theme.primaryColor};\n    color: ${props => props.theme.white};\n    padding-top: 1em;\n    padding-left: 1em;\n    padding-bottom: 1em;\n`;\n\nexport function PageHeader(props: PageHeaderProps): JSX.Element {\n\n    return (\n        <HeaderGrid>\n            <ResumeTitle\n                fullName=\"Wren Hawthorne\"\n                jobTitle=\"Senior Software Engineer\"\n            />\n            <ContactDetails\n                email=\"wrenhawth@gmail.com\"\n                phone=\"+14438676452\"\n                github=\"https://github.com/wrenhawth\"\n            />\n        </HeaderGrid>\n    );\n}\n","import { styled } from \"../utils/theme\";\n\nexport const SectionName = styled.h2`\n    font-family: ${props => props.theme.headerFont};\n    color: ${props => props.theme.primaryColor};\n    border-bottom: ${props => props.theme.primaryColor};\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    margin-top: 0.5em;\n    display: inline-block;\n    padding-right: 0.5em;\n    margin-bottom: 0.5em;\n\n`","import { styled } from \"../utils/theme\";\n\nexport const DateRange = styled.span`\n    font-family: ${props => props.theme.headerFont};\n    font-weight: 300;\n    font-size: .9em;\n    color: ${props => props.theme.secondaryColor};\n    margin-top: 0;\n`\n","import { styled } from \"../utils/theme\";\n\nexport const SidebarHeader = styled.h3`\n    margin-top: 0;\n    margin-bottom: 0.5em;\n    font-family: ${props => props.theme.headerFont};\n    font-weight: 400;\n`;","import { styled } from \"../utils/theme\";\n\nexport const ItemTitle = styled.h4`\n    font-family: ${props => props.theme.headerFont};\n    margin-top: 0;\n    margin-bottom: 0.5em;\n`;","import * as React from \"react\";\nimport { Job } from \"../Experience\";\n\nimport { styled } from \"../../../../utils/theme\";\nimport moment from \"moment\";\nimport { DateRange } from \"../../../../components/DateRange\";\nimport { SidebarHeader } from \"../../../../components/SidebarHeader\";\nimport { ItemTitle } from \"../../../../components/ItemTitle\";\ninterface JobItemProps {\n    job: Job;\n}\n\nconst JobGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n`\n\nconst Accomplishments = styled.ul`\n    margin-top: 0;\n    font-size: .9em;\n    list-style-type: square;\n    list-style-position: inside;\n    padding-left: 0.25em;\n`;\n\nexport function JobItem(props: JobItemProps): JSX.Element {\n    const start = moment(props.job.startDate).format(\"MMM Y\");\n    const bullets = props.job.bullets.map((b, i) =>\n        <li key={`bullet-${i}`}>{b}</li>\n    );\n    const end = props.job.endDate ? moment(props.job.endDate).format(\"MMM Y\") : \"Present\"\n    return (\n        <JobGrid>\n            <div>\n                <SidebarHeader>{props.job.companyName}</SidebarHeader>\n                <DateRange>{start} - {end}</DateRange>\n            </div>\n            <div>\n                <ItemTitle>{props.job.jobTitle}</ItemTitle>\n                <Accomplishments>\n                    {bullets}\n                </Accomplishments>\n            </div>\n        </JobGrid>\n    );\n}\n","import { styled } from \"../utils/theme\";\n\nexport const Mono = styled.code`\n    font-family: ${props => props.theme.monoFont};\n    font-size: 1em;\n`\n","import * as React from \"react\";\nimport { styled } from \"../utils/theme\";\n\ntype IconType = \"mail\" | \"call\" | \"logo-github\" | \"construct\" | \"briefcase\" | \"school\" | \"star\";\n\ninterface IconProps {\n    type: IconType;\n}\n\nconst IconSpan = styled.span`\n    /* float: left; */\n    padding-right: .25em;\n    font-family: ${props => props.theme.headerFont};\n    color: ${props => props.theme.primaryColor};\n    border-bottom: ${props => props.theme.primaryColor};\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    font-size: 24px;\n`\n\nexport function HeaderIcon(props: IconProps): JSX.Element {\n    let iconType: string = props.type;\n    if (!iconType.includes(\"logo\")){\n        iconType = `md-${iconType}`;\n    }\n    return (\n        <IconSpan className={`icon ion-${iconType}`} />\n    );\n}\n","import * as React from \"react\";\nimport moment from \"moment\";\n\nimport { SectionName } from \"../../../components/SectionName\";\nimport { JobItem } from \"./components/JobItem\";\nimport { Mono } from \"../../../components/Mono\";\nimport { styled } from \"../../../utils/theme\";\nimport { HeaderIcon } from \"../../../components/HeaderIcon\";\n\ninterface ExperienceProps {\n}\n\nexport interface Job {\n    companyName: string;\n    startDate: Date;\n    endDate?: Date;\n    jobTitle: string;\n    bullets: React.ReactNode[];\n}\n\nconst Stack = styled(Mono)`\n    font-style: italic;\n    color: ${props => props.theme.secondaryColor};\n    white-space: nowrap;\n    margin-left: 0.5em;\n`;\n\nconst jobs: Job[] = [\n    {\n        companyName: \"GoGuardian\",\n        startDate: moment().year(2022).month(\"July\").toDate(),\n        jobTitle: \"Senior Software Engineer\",\n        bullets: [\n            <>\n                Lead a team of Front-End engineers in developing features and improving the accessibility of GoGuardian Admin, an application for K-12 schools to manage their web filtering and student safety. \n                <Stack>(Typescript, React, Redux, styled-components)</Stack>\n            </>,\n            <>\n                Developed a Proof of Concept interface for an LLM in Streamlit that allowed employees to more efficiently categorize sites that were previously uncategorized by the web categorization data pipelines, reducing the rate of uncategorized student browsing by a factor of 5.\n                <Stack>(Python, StreamLit)</Stack>\n            </>,\n            <>\n                Mentored junior engineers on coding best practices, pitfalls, and developing apps with a focus on extensibility, reliability, and efficiency.\n            </>\n        ]\n    },\n    {\n        companyName: \"98point6\",\n        startDate: moment().year(2019).month(\"August\").toDate(),\n        jobTitle: \"Senior Software Enginner\",\n        bullets: [\n            <>\n                \n                Developed the React/Redux-based Clinician Console app used by medical professionals to interact with, diagnose, and treat patients in a telehealth setting. Worked to shape the development of the app to leverage development best practices for performance, maintainability, reliability, and usability. \n                <Stack>(Typescript, React, Redux, styled-components) </Stack>\n            </>, \n            <>\n                Transitioned the type-checking system for three large web clients from Flow to Typescript. This change of type-checking systems significantly improved type safety, reduced build times by 50%, and increased developer ability to deliver features for the company's web applications. A focus on mentoring and education, alongside automated tooling, empowered other developers to smoothly transition and more efficiently use the new language features. \n                <Stack>(Typescript, Flow)</Stack>\n            </>,\n            // <>\n            //     Used a combination of automated tooling, developer education, and manual code updates to transition the company's web clients from Flow to Typescript. The change of type-checking systems significantly improved type safety, reduced build times by 50%, and increased developer velocity for the Clinician Console, Patient Web App, and Internal Commercial tools. This transition was carried out while these apps were in active development and a focus on mentoring and education empowered the other developers to smoothly transition and more efficiently use the new language features. \n            //     <Stack>(Typescript, Flow)</Stack>\n            // </>,\n            <>\n                Created utilities to integrate the Clinician Console with a new GraphQL-based back-end, creating a bridge between the front-end console and the queries and mutations needed to retrieve and manipulate medical data. \n                <Stack>(GraphQL, react-query, urql, graphql-codegen)</Stack>\n            </>,\n        ]\n    },\n    {\n        companyName: \"Polly\",\n        startDate: moment().year(2017).month(\"August\").toDate(),\n        endDate: moment().year(2019).month(\"August\").toDate(),\n        jobTitle: \"Software Enginner\",\n        bullets: [\n            <>\n                Developed front-end application in React for managing and analyzing the results of surveys.\n                Coordinated, maintained, and documented code standards for the component library, improving developer output, component performance,\n                and the consistency of the user experience. These component performance optimizations, combined with other front-end optimizations, reduced average load time by 50%. <Stack> (TypeScript, React, SCSS, MongoDB)</Stack>\n            </>,\n            <>\n                Developed large-scale back end software for processing user events from Slack integration.\n                Wrote back-end web-application software to process millions of AWS SQS events each month to quickly\n                respond to user input in Slack. Refactored code to improve throughput and reduce customer wait time due to API rate limiting.\n                <Stack> (Node.js, MongoDB, AWS SQS, AWS Lambda)</Stack>\n            </>\n        ]\n    },\n    {\n        companyName: \"CSRA / 42Six Solutions\",\n        startDate: moment().year(2014).month(\"October\").toDate(),\n        endDate: moment().year(2017).month(\"August\").toDate(),\n        jobTitle: \"Software Engineer\",\n        bullets: [\n            <>Developed and maintained case-management system web-app for processing refugee applications. Hardened security within the application to better protect data of applicants and employees.<Stack>(Java, C#, T-SQL)</Stack></>,\n            <>Created Angular.js webapp that pulled data from a RESTful JSON service and presented the results in a user-friendly\n            and customizable format, resulting in a strong and competitive proposal for the company. <Stack>(Node.js, ES5, AngularJS)</Stack></>,\n            <>Modified machine learning workflows to properly use Apache Spark features for more reliable and efficient distributed processing, increasing performance. Increased configurability of the workflows through modifying the front-end used for launching and viewing the results of jobs. <Stack>(Python, Spark, Django, AngularJS)</Stack></>,\n        ]\n    }\n];\n\nexport function Experience(props: ExperienceProps): JSX.Element {\n    const jobList = jobs.map((j) =>\n        <JobItem key={j.companyName} job={j} />\n    );\n    return (\n        <div>\n            <HeaderIcon type=\"briefcase\" /><SectionName>Experience</SectionName>\n            {jobList}\n        </div>\n    );\n}\n","import * as React from \"react\";\n\nimport { SectionName } from \"../../../components/SectionName\";\nimport { HeaderIcon } from \"../../../components/HeaderIcon\";\nimport { styled } from \"../../../utils/theme\";\nimport { SidebarHeader } from \"../../../components/SidebarHeader\";\nimport { DateRange } from \"../../../components/DateRange\";\n\ninterface EducationProps {\n}\n\nconst SchoolGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-auto-rows: auto;\n    grid-row-gap: 1em;\n`\n\nconst EducationContext = styled.p`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n`\n\nconst Major = styled.span`\n    font-style: normal;\n`\nconst EducationDescription = styled.p`\n    margin: 0;\n    font-family: ${props => props.theme.bodyFont};\n`;\n\nexport function Education(props: EducationProps): JSX.Element {\n\n    return (\n        <div><HeaderIcon type=\"school\" />\n            <SectionName id=\"Education\" className=\"Education\">Education</SectionName>\n            <SchoolGrid>\n                <div>\n                    <SidebarHeader>Georgia Tech <DateRange>2017 - 2018</DateRange></SidebarHeader>\n                    <EducationDescription>Graduate coursework including Artificial Intelligence, Robotics, &amp; Data Visualization</EducationDescription>\n                </div>\n                <div>\n                    <SidebarHeader>University of Maryland <DateRange>2010 - 2013</DateRange></SidebarHeader>\n                    <EducationContext>\n                    <EducationDescription><Major>B.S. in Psychology</Major>, Minor in Computer Science</EducationDescription>\n                </EducationContext>\n                </div>\n                \n            </SchoolGrid>\n        </div>\n    );\n}\n","import * as React from \"react\";\nimport { SectionName } from \"../../components/SectionName\";\nimport { Icon } from \"../../components/Icon\";\nimport { styled } from \"../../utils/theme\";\n\nconst SkillsList = styled.div`\n    font-family: ${props => props.theme.headerFont};\n`\n\nconst SkillsItem = styled.p`\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n`\n\nconst Level = styled.span`\n    font-weight: normal;\n`\n\nexport function TechnicalSkills(): JSX.Element {\n\n    return (\n        <div>\n            <SectionName><Icon type=\"construct\"/>Technologies</SectionName>\n            <SkillsList>\n                <SkillsItem><Level>Experienced</Level>: React, Redux, TypeScript, Node.js, HTML, Styled-Components</SkillsItem>\n                <SkillsItem><Level>Working Knowledge</Level>: GraphQL, Docker, Storybook, Webpack, Amazon SQS, Amazon Lambda</SkillsItem>\n                <SkillsItem><Level>Previous Exposure</Level>: D3.js, AngularJS, Express, Python</SkillsItem>\n            </SkillsList>\n        </div>\n    );\n}\n","import * as React from \"react\";\nimport { SectionName } from \"../../components/SectionName\";\nimport { Icon } from \"../../components/Icon\";\nimport { styled } from \"../../utils/theme\";\n\nconst SkillsList = styled.div`\n    font-family: ${props => props.theme.headerFont};\n`\n\nconst SkillsItem = styled.p`\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n`\n\nconst Area = styled.span`\n    font-family: ${props => props.theme.headerFont};\n    font-weight: normal;\n`\n\nexport function OtherSkills(): JSX.Element {\n\n    return (\n        <div>\n            <SectionName><Icon type=\"star\"/>Skills</SectionName>\n            <SkillsList>\n                <SkillsItem><Area>Leadership</Area>: Guiding and facilitating platform working group discussions on code standards and best practices</SkillsItem>\n                <SkillsItem><Area>Problem Solving</Area>: Identifying and evaluating potential technical approaches for requirements through collaboration with other engineers, product, and UX designers</SkillsItem>\n                <SkillsItem><Area>Mentorship</Area>: Onboarding new engineers onto the team to set them up for success. Regular 1:1s to share helpful resources and provide support and guidance for other engineers</SkillsItem>\n            </SkillsList>\n        </div>\n    );\n}\n","import * as React from \"react\";\n\nimport { styled } from \"../../utils/theme\";\nimport { Experience } from \"./Experience/Experience\";\nimport { Education } from \"./Education/Education\";\nimport { TechnicalSkills } from \"../Skills/TechnicalSkills\";\nimport { OtherSkills } from \"../Skills/OtherSkills\";\n\ninterface PageBodyProps {\n}\n\nconst BodyDiv = styled.div`\n    padding-left: 1em;\n`;\n\nconst TwoColumns = styled.div`\n    display: grid;\n    grid-template-columns: 2fr 3fr;\n    grid-column-gap: 1em;\n`\n\nexport function PageBody(props: PageBodyProps): JSX.Element {\n\n    return (\n        <BodyDiv>\n            {/* </SplitColumns> */}\n            <TwoColumns>\n                <TechnicalSkills />\n                <OtherSkills />\n            </TwoColumns>\n                <Experience />\n                <Education />\n        </BodyDiv>\n    );\n}\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport \"./App.css\";\nimport { PageHeader } from \"./sections/PageHeader/PageHeader\";\nimport { defaultTheme, styled } from \"./utils/theme\";\nimport { PageBody } from \"./sections/PageBody/PageBody\";\n\nconst Resume = styled.div`\n  font-family: ${props => props.theme.bodyFont};\n  font-weight: 300;\n  font-size: 16px;\n`;\n\nexport function App() {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Resume className=\"resume\">\n        <PageHeader />\n        <PageBody />\n      </Resume>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}